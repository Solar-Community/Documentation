/*
 * This file is part of JuniperBot.
 *
 * JuniperBot is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JuniperBot is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JuniperBot. If not, see <http://www.gnu.org/licenses/>.
 */
buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
        kotlinVersion = '1.3.60'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

allprojects {

    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://dl.bintray.com/goldrenard/maven" }
        maven { url "http://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/" }
        maven { url "https://oss.jfrog.org/artifactory/libs-release"}
        maven { url "http://nexus.bippo.co.id/nexus/content/repositories/soluvas-public-thirdparty/" } // net.reduls.sanmoku artifact
        maven { url "$rootProject.projectDir/local" }
    }

    group = 'ru.juniperbot'
    version = System.getenv('CI_VERSION') ?: '7.x-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileKotlin.kotlinOptions.jvmTarget = JavaVersion.VERSION_11.toString()
    compileTestKotlin.kotlinOptions.jvmTarget = JavaVersion.VERSION_11.toString()

    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:deprecation"

    ext {
        generatedMainJava = "$buildDir/generated"

        //@formatter:off

        // Common Properties
        springBootVersion                  = "$springBootVersion"
        kotlinVersion                      = "$kotlinVersion"
        springCloudVersion                 = 'Greenwich.RELEASE'
        springConsulVersion                = '2.1.2.RELEASE'
        springRetryVersion                 = "1.2.4.RELEASE"
        hibernateVersion                   = '5.3.7.Final'
        lombokVersion                      = '1.18.4'
        jsonVersion                        = '20160810'
        commonsIoVersion                   = '2.5'
        commonsCollections4Version         = '4.1'
        commonsValidatorVersion            = '1.6'
        commonsCodecVersion                = '1.11'
        guavaVersion                       = '18.0'
        postgresqlVersion                  = '42.2.5'
        metricsSpringVersion               = '3.1.3'
        programJbVersion                   = '1.0.13'
        gsonVersion                        = '2.8.1'
        jodaMoneyVersion                   = '0.12'
        prettytimeVersion                  = '4.0.1.Final'
        jsoupVersion                       = '1.11.2'
        mapstructVersion                   = '1.2.0.Final'
        opencvVersion                      = '3.2.0'
        jacksonVersion                     = '2.9.7'
        evalExVersion                      = '2.4'
        time4jVersion                      = '5.5'
        
        jmxRemote                          = '4.1.1'
        jmxRemoteLegacy                    = '1.0-b01-ea'

        // Integration Properties
        jdaVersion                         = '4.0.0_62'
        discordWebhookVersion              = '0.1.7'
        lavaplayerVersion                  = '1.3.27'
        lavalinkVersion                    = '4.18'
        googleApiServicesYoutubeVersion    = 'v3-rev205-1.25.0'
        jwbfVersion                        = '4.0.0-SNAPSHOT'
        wikitextVersion                    = '3.1.6'
        vkSdkVersion                       = '0.5.8'
        twitch4jVersion                    = '1.0.0-alpha.16'
        romeVersion                        = '1.11.1'
        jsonApiConverter                   = '0.9'
        prometheusVersion                  = '0.6.0'
        jasyptVersion                      = '1.9.3'
        jasperReportsVersion               = '6.10.0'

        //@formatter:on
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.annotationProcessorGeneratedSourcesDirectory = file(generatedMainJava)
        options.compilerArgs << "-Xlint:deprecation"
    }

    sourceSets {
        main.java.srcDirs += generatedMainJava
    }

    dependencies {
        compileOnly "org.mapstruct:mapstruct-jdk8:$mapstructVersion"
        compileOnly "org.mapstruct:mapstruct-processor:$mapstructVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "javax.xml.bind:jaxb-api"
        annotationProcessor "org.hibernate:hibernate-jpamodelgen:$hibernateVersion"
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion"

        testCompile "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    }

    dependencyManagement {
        imports {
            mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES) {
                bomProperty("kotlin.version", "$kotlinVersion")
            }
        }
    }
}

ext {
    moduleName = 'JuniperBot-Parent'
}